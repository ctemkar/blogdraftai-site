name: Auto-generate Blog Post

permissions:
  contents: write   # allow pushing commits back

on:
  schedule:
    - cron: "0 2 * * 1"   # Monday 9AM Bangkok (2AM UTC)
  workflow_dispatch:
    inputs:
      topic:
        description: "Custom topic for the article"
        required: false
        default: "trending AI topic"

jobs:
  generate-blog:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install openai jq

    - name: Generate blog post and update posts.json
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        INPUT_TOPIC: ${{ github.event.inputs.topic }}
      run: |
        set -xe
        mkdir -p posts
        TODAY=$(date +'%Y-%m-%d')
        POST_FILE="posts/post-${TODAY}.html"

        python - <<PYCODE
        import os, openai, datetime, json

        print("=== PYTHON SCRIPT START ===")

        api_key = os.environ.get("OPENAI_API_KEY")
        if not api_key:
            print("ERROR: No OpenAI API key found.")
            exit(1)

        openai.api_key = api_key
        today = datetime.date.today().strftime("%A, %B %d, %Y")
        topic = os.getenv("INPUT_TOPIC", "trending AI topic")

        # Step 1: Generate title + summary with guaranteed JSON
        meta_prompt = f"Generate a catchy blog title and a 2-sentence summary for {topic} as of {today}. Respond in JSON with keys: title, summary."
        try:
            resp = openai.chat.completions.create(
                model="gpt-4o-mini",
                messages=[{"role": "user", "content": meta_prompt}],
                max_tokens=200,
                response_format={"type": "json_object"}
            )
            raw = resp.choices[0].message.content.strip()
            print("Raw meta response:", raw)
            meta = json.loads(raw)
        except Exception as e: